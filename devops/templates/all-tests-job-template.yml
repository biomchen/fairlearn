# Template for setting up the python environment (with optional pinned requirements)
# and running all tests (except for install tests)

# Some key parameters:

# platform
# A human-readable string which should be set to match vmImage

# testRunType: {Unit, Notebooks}
# Specifies the set of tests to be run

# installationType: {None, PipLocal, PyPI}
# Specifies how Fairlearn should be made available. Note
# that the Notebooks tests will not work with 'None'
# If PyPI is specified, then targetType, versionArtifactName
# and versionArtifactFile need to be specified, in order to
# determine which PyPI archive to use, and which version
# of Fairlearn to fetch from it.

parameters:
  platform: ''
  vmImage: ''
  testRunTypes: ['Unit', 'Notebooks']
  installationType: ''
  pyVersions: [3.5, 3.6, 3.7, 3.8]
  pinRequirements: False
  freezeArtifactStem: 
  freezeFileStem:
  # Following are used if the installationType is PyPI
  targetType: 'Test'
  versionArtifactName:
  versionArtifactFile:

jobs:
- job: ${{ parameters.platform }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    maxParallel: 4
    matrix:
      ${{ each pyVer in parameters.pyVersions }}:
        ${{ each testRunType in parameters.testRunTypes }}:
          ${{testRunType}}_${{ pyVer }}:
            PyVer: ${{ pyVer }}
            TestRunType: ${{testRunType}}
            RequirementsFile: requirements-${{pyVer}}.txt
            FreezeArtifact: '${{parameters.freezeArtifactStem}}${{parameters.platform}}${{parameters.testRunType}}${{pyVer}}'
            FreezeFile: '${{parameters.freezeFileStem}}-${{parameters.name}}${{pyVer}}.txt'

  variables:
    ${{ if eq(parameters.targetType, 'Test') }}:
      pypiUrl: https://test.pypi.org/simple/
    ${{ if eq(parameters.targetType, 'Prod') }}:
      pypiUrl: https://pypi.org/simple/

  steps:
  - template: test-run-step-template.yml
    parameters:
      testRunType: $(TestRunType)
      installationType: ${{parameters.installationType}}
      pythonVersion: $(PyVer)
      pinRequirements: ${{parameters.pinRequirements}}
      requirementsFile: $(RequirementsFile)
      freezeArtifact: $(FreezeArtifact)
      freezeFile: $(FreezeFile)
      # Following are used if the installationType is PyPI
      pypiUrl: $(pypiUrl)
      versionArtifactName: ${{parameters.versionArtifactName}}
      versionArtifactFile: ${{parameters.versionArtifactFile}}